
hit=0
miss=0
step=1
declare -a numbers
declare -a correctness

while (true)
do

echo "Step: $step"

read -p "Please enter number from 0 to 9 (q - quit): " answer

case "${answer}" in
    [0-9])
        
    ;;
    q)
        echo "Bye"
        echo "Exit..."
	break
    ;;
    *)
        echo "Not valid input"
        echo "Please repeat"
	continue
    ;;
esac
step=$((step+1))
random_number=${RANDOM: -1}
if [[ "${answer}" == "${random_number}" ]]
    then
        echo "Hit! My number:$random_number"
	hit=$((hit+1))
    else
        echo "Miss! My number: $random_number"
	miss=$((miss+1))
fi

RED='\e[31m'
GREEN='\e[32m'
RESET='\e[0m'

total=$(( hit + miss ))

let hit_percent=hit*100/total
let miss_percent=100-hit_percent

echo "Hit: ${hit_percent}%" "Miss: ${miss_percent}%"

if (( random_number != answer ))
then
	number_string="${RED}${random_number}${RESET}" # неверные выделяем красным
else
        number_string="${GREEN}${random_number}${RESET}" # верные выделяем зеленым
fi
numbers+=(${number_string}) # добавляем в конец массива

if (( step > 10 ))
	then
		echo -e "Numbers: ${numbers[@]: -10}"
	else
		echo -e "Numbers: ${numbers[@]}"
fi
done
